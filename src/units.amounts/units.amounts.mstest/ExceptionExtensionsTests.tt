<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
    var parameters = new[]
    {
        new { TypeName = "ExternalException",  CompatibleName = "ExternalException", args = "" },
        new { TypeName = "ArgumentOutOfRangeException",  CompatibleName = "ArgumentOutOfRangeException", args = "" },
        new { TypeName = "ArgumentException",  CompatibleName = "ArgumentException", args = "" },
        new { TypeName = "UnitConversionException",  CompatibleName = "UnitConversionException", args = " ElectricUnits.Ampere, ElectricUnits.Coulomb " },
        new { TypeName = "UnknownUnitException",  CompatibleName = "UnknownUnitException", args = " ElectricUnits.Ampere.ToString(), ElectricUnits.Ampere.ToString() " },
    };
#>
// <auto-generated>
// This .cs file is generated by T4 template. Changes should be made by editing the .tt file.
// </auto-generated>

using System.Runtime.InteropServices;
using cc.isr.UnitsAmounts.ExceptionExtensions;

namespace cc.isr.UnitsAmounts.MSTest;

/// <summary>
/// Tests internal exception extension methods for adding exception data.
/// </summary>
[TestClass]
public class ExceptionExtensionsTests
{
<# foreach (var x in parameters) { #>

    /// <summary>   <see cref"<#= x.CompatibleName #>"/> data should add. </summary>
    /// <remarks>   <#= this.today #>. </remarks>
    [TestMethod]
    public void <#= x.TypeName #>DataShouldAdd()
    {
        Exception exception = new <#= x.CompatibleName #>(<#= x.args #>);
        Assert.IsTrue( ExceptionDataMethods.AddExceptionData( exception, exception as <#= x.CompatibleName #> ),
                       $"{nameof(<#= x.TypeName #>)} exception data should be added");
    }
<# } #>
}

<#+
    string today = $"{DateTime.UtcNow.ToShortDateString()}";
#>
